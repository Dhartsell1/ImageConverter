<Page
    x:Class="ImageConverter.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:ImageConverter.Common"
    xmlns:core="using:ImageConverter.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:ImageConverter"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:win1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    FontSize="{StaticResource DefaultFontSize}"
    mc:Ignorable="d">

    <Page.Resources>
        <Style BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        </Style>
    </Page.Resources>

    <Grid
        AllowDrop="True"
        DragOver="Files_DragOver"
        Drop="Files_Drop">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition x:Name="OutputGridColumn" Width="256" />
        </Grid.ColumnDefinitions>

        <!--  TITLE BAR  -->
        <Grid
            x:Name="TitleBar"
            Grid.ColumnSpan="2"
            Background="Transparent"
            Canvas.ZIndex="1">
            <TextBlock
                Margin="12,36,0,0"
                FontSize="26"
                FontWeight="Bold"
                IsHitTestVisible="False"
                OpticalMarginAlignment="TrimSideBearings"
                Text="Image Converter"
                TextLineBounds="Tight" />
        </Grid>

        <!--  OUTPUT BACKGROUND  -->
        <Border
            x:Name="OutputBackground"
            Grid.RowSpan="10"
            Grid.Column="10">
            <Border.Background>
                <AcrylicBrush
                    win1903:TintLuminosityOpacity="0.6"
                    BackgroundSource="HostBackdrop"
                    FallbackColor="{ThemeResource SystemChromeMediumColor}"
                    TintColor="{ThemeResource SystemAltHighColor}"
                    TintOpacity="0.8" />
            </Border.Background>
        </Border>

        <!--  INPUT BACKGROUND  -->
        <Border
            x:Name="InputBackground"
            Grid.RowSpan="10"
            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" />

        <!--  OUTPUT COLUMN  -->
        <Grid
            x:Name="OutputContainer"
            Grid.Row="1"
            Grid.RowSpan="3"
            Grid.Column="1">
            <Grid.ChildrenTransitions>
                <TransitionCollection>
                    <RepositionThemeTransition IsStaggeringEnabled="False" />
                </TransitionCollection>
            </Grid.ChildrenTransitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel Padding="12" Spacing="12">
                <Button
                    Grid.Column="5"
                    Height="32"
                    HorizontalAlignment="Stretch"
                    Background="{ThemeResource SystemControlHighlightBaseMediumLowRevealAccentBackgroundBrush}"
                    Click="{x:Bind ViewModel.ConvertClick}"
                    Content="Convert"
                    Foreground="{ThemeResource AccentButtonForeground}"
                    IsEnabled="{x:Bind TrueAndTrueAndFalse(ViewModel.HasItems, ViewModel.HasExportFolder, ViewModel.IsBusy), Mode=OneWay}" />
                <TextBlock
                    FontSize="12.333"
                    FontWeight="Bold"
                    Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                    TextWrapping="Wrap"
                    Visibility="{x:Bind FalseToVis(ViewModel.HasExportFolder), Mode=OneWay}">
                    Please choose an output folder below before converting.
                </TextBlock>
            </StackPanel>


            <ScrollViewer Grid.Row="1" Padding="12,8,12,12">
                <StackPanel Spacing="20">
                    <StackPanel>
                        <TextBlock
                            Margin="0,0,0,4"
                            FontSize="{StaticResource DefaultFontSize}"
                            Opacity="0.7"
                            Text="Output Folder" />

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button
                                Height="32"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                HorizontalContentAlignment="Left"
                                AllowDrop="False"
                                Click="{x:Bind ViewModel.DestinationClick}"
                                Content="{x:Bind ViewModel.ExportFolder.Path, FallbackValue='Click to choose', TargetNullValue='Click to choose', Mode=OneWay}"
                                CornerRadius="2 0 0 2"
                                DragOver="Output_DragOver"
                                Drop="Output_Drop"
                                FontSize="{StaticResource DefaultFontSize}"
                                IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                                ToolTipService.ToolTip="{Binding Content, RelativeSource={RelativeSource Mode=Self}}" />

                            <Button
                                x:Name="SecondaryButton"
                                Grid.Column="1"
                                Width="32"
                                Height="32"
                                Padding="0,0,8,0"
                                VerticalAlignment="Bottom"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                CornerRadius="0 2 2 0"
                                IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}">
                                <Button.Flyout>
                                    <MenuFlyout Placement="Bottom">
                                        <MenuFlyoutItem
                                            Click="{x:Bind ViewModel.OpenExportFolderClick}"
                                            FontSize="{StaticResource DefaultFontSize}"
                                            IsEnabled="{x:Bind ViewModel.HasExportFolder, Mode=OneWay}"
                                            Text="Open in File Explorer" />
                                        <MenuFlyoutSubItem FontSize="{StaticResource DefaultFontSize}" Text="Output Folder File Options">
                                            <ToggleMenuFlyoutItem
                                                FontSize="{StaticResource DefaultFontSize}"
                                                IsChecked="{x:Bind False(ViewModel.IsOverwrite), BindBack=ViewModel.SetNewName, Mode=TwoWay}"
                                                Text="Generate new name if already exists" />
                                            <ToggleMenuFlyoutItem
                                                FontSize="{StaticResource DefaultFontSize}"
                                                IsChecked="{x:Bind ViewModel.IsOverwrite, Mode=TwoWay}"
                                                Text="Overwrite Existing" />
                                        </MenuFlyoutSubItem>
                                    </MenuFlyout>
                                </Button.Flyout>
                                <Button.Content>
                                    <TextBlock
                                        x:Name="ChevronTextBlock"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        AutomationProperties.AccessibilityView="Raw"
                                        FontFamily="Segoe MDL2 Assets"
                                        FontSize="12"
                                        Text="&#xE70D;" />
                                </Button.Content>
                            </Button>
                        </Grid>


                    </StackPanel>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ComboBox
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            CornerRadius="2 0 0 2"
                            FontSize="12"
                            Header="Output Format"
                            IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                            ItemsSource="{x:Bind ViewModel.ImageFormats}"
                            SelectedItem="{x:Bind ViewModel.SelectedFormat, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate x:DataType="core:ImageFormat">
                                    <TextBlock Text="{x:Bind DisplayName}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Button
                            Grid.Column="1"
                            Height="32"
                            Margin="0,0,0,0"
                            VerticalAlignment="Bottom"
                            Click="{x:Bind ViewModel.OptionsClick}"
                            CornerRadius=" 0 2 2 0"
                            IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasOptions, ViewModel.IsBusy), Mode=OneWay}">
                            <SymbolIcon
                                Margin="-4"
                                RenderTransformOrigin="0.5 0.5"
                                Symbol="Setting">
                                <SymbolIcon.RenderTransform>
                                    <CompositeTransform ScaleX="0.6" ScaleY="0.6" />
                                </SymbolIcon.RenderTransform>
                            </SymbolIcon>
                        </Button>
                    </Grid>

                    <Button
                        Grid.Column="4"
                        Height="32"
                        Margin="0,0,0,0"
                        HorizontalAlignment="Stretch"
                        Click="{x:Bind ViewModel.TransformClick}"
                        IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}">
                        Resize Options
                    </Button>

                </StackPanel>
            </ScrollViewer>


        </Grid>

        <!--  INPUT COLUMN  -->
        <Grid x:Name="InputContainer" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  INPUT ROW  -->
            <Grid Margin="12,24,12,12" ColumnSpacing="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button
                    Grid.Column="0"
                    Click="{x:Bind ViewModel.AddFilesClick}"
                    Content="Add Files"
                    IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}" />
                <Button
                    Grid.Column="1"
                    Click="{x:Bind ViewModel.RemoveFilesClick}"
                    Content="Remove Selected"
                    IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasSelectedItems, ViewModel.IsBusy), Mode=OneWay}" />
                <Button
                    Grid.Column="2"
                    Click="{x:Bind ViewModel.ClearClick}"
                    Content="Remove All"
                    IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasItems, ViewModel.IsBusy), Mode=OneWay}" />






            </Grid>

            <!--  FILES VIEW  -->
            <Grid Grid.Row="1">
                <ListView
                    x:Name="FilesList"
                    Margin="0,0,0,0"
                    Padding="0,12,0,40"
                    Background="Transparent"
                    IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                    ItemsSource="{x:Bind ViewModel.FileList}"
                    SelectionMode="Multiple">
                    <i:Interaction.Behaviors>
                        <common:ListViewBaseItemsSelectionBehavior SelectedItems="{x:Bind ViewModel.SelectedFiles}" />
                    </i:Interaction.Behaviors>
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemContainerTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition
                                FromHorizontalOffset="0"
                                FromVerticalOffset="200"
                                IsStaggeringEnabled="True" />
                            <AddDeleteThemeTransition />
                            <ContentThemeTransition />
                        </TransitionCollection>
                    </ListView.ItemContainerTransitions>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="common:ImageViewModel">
                            <Grid Padding="0,0,12,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    FontSize="13"
                                    Text="{x:Bind File.Name}"
                                    ToolTipService.ToolTip="{x:Bind File.Path}" />
                                <TextBlock
                                    Grid.Column="2"
                                    Margin="10,0"
                                    FontSize="13"
                                    Opacity="0.65"
                                    Text="{x:Bind Status, Mode=OneWay}"
                                    ToolTipService.ToolTip="{x:Bind ExtendedStatus, Mode=OneWay}" />
                                <TextBlock
                                    Grid.Column="3"
                                    FontSize="13"
                                    Opacity="0.65"
                                    Text="{x:Bind Size}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <ProgressRing
                    x:Name="ProcessingRing"
                    x:Load="{x:Bind ViewModel.IsProcessing, Mode=OneWay}"
                    Grid.Row="3"
                    Width="50"
                    Height="50"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="White"
                    IsActive="True" />
            </Grid>

        </Grid>

        <!--  STATUS BAR  -->
        <Border Grid.Row="2" Background="{ThemeResource SystemChromeMediumColor}">
            <Grid
                Height="24"
                Padding="12,0"
                ColumnSpacing="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    VerticalAlignment="Center"
                    Text="{x:Bind ViewModel.StatusBarLeft, Mode=OneWay}"
                    TextLineBounds="Tight" />
                <TextBlock
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Text="{x:Bind ViewModel.StatusBarRight, Mode=OneWay}"
                    TextAlignment="Right"
                    TextLineBounds="Tight" />
            </Grid>
        </Border>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveSizeStates">
                <VisualState x:Name="DefaultSizeState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="CompactSizeState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="OutputGridColumn.Width" Value="200" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
