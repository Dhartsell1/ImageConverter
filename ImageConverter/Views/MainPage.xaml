<Page x:Class="ImageConverter.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:common="using:ImageConverter.Common"
      xmlns:core="using:ImageConverter.Core"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:local="using:ImageConverter"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      FontSize="{StaticResource DefaultFontSize}"
      mc:Ignorable="d">

    <Page.Resources>
        <Style BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="RootGrid"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPointerOver}" />
                                            <Setter Target="ContentWrapper.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPressed}" />
                                            <Setter Target="ContentWrapper.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundDisabled}" />
                                            <Setter Target="ContentWrapper.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ContentWrapper"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  AutomationProperties.AccessibilityView="Raw"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  CornerRadius="{TemplateBinding CornerRadius}" />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid Padding="20 20 20 0"
          AllowDrop="True"
          DragOver="Files_DragOver"
          Drop="Files_Drop">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition FromHorizontalOffset="0"
                                         FromVerticalOffset="250"
                                         IsStaggeringEnabled="True" />
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.Background>
            <common:BlurBrush FallbackColor="Black" />
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  TITLE BAR  -->
        <TextBlock Margin="0 -10 0 0"
                   FontSize="12"
                   Text="Image Converter for Windows 10"
                   TextLineBounds="Tight" />

        <!--  OUTPUT ROW  -->
        <Grid Grid.Row="1" Margin="0 36 0 8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="8" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock FontSize="{StaticResource DefaultFontSize}" Text="Output Folder" />

            <Button Height="32"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    HorizontalContentAlignment="Left"
                    AllowDrop="False"
                    Click="{x:Bind ViewModel.DestinationClick}"
                    Content="{x:Bind ViewModel.ExportFolder.Path, FallbackValue='Click to choose', TargetNullValue='Click to choose', Mode=OneWay}"
                    DragOver="Output_DragOver"
                    Drop="Output_Drop"
                    FontSize="{StaticResource DefaultFontSize}"
                    IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                    ToolTipService.ToolTip="{Binding Content, RelativeSource={RelativeSource Mode=Self}}" />

            <Button x:Name="SecondaryButton"
                    Grid.Column="1"
                    Width="32"
                    Height="32"
                    Padding="0,0,8,0"
                    VerticalAlignment="Bottom"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}">
                <Button.Flyout>
                    <MenuFlyout Placement="BottomEdgeAlignedRight">
                        <MenuFlyoutItem Click="{x:Bind ViewModel.OpenExportFolderClick}"
                                        FontSize="{StaticResource DefaultFontSize}"
                                        IsEnabled="{x:Bind ViewModel.HasExportFolder, Mode=OneWay}"
                                        Text="Open in Explorer" />
                        <MenuFlyoutSubItem FontSize="{StaticResource DefaultFontSize}" Text="Output Folder File Options">
                            <ToggleMenuFlyoutItem FontSize="{StaticResource DefaultFontSize}"
                                                  IsChecked="{x:Bind False(ViewModel.IsOverwrite), BindBack=ViewModel.SetNewName, Mode=TwoWay}"
                                                  Text="Generate new name if already exists" />
                            <ToggleMenuFlyoutItem FontSize="{StaticResource DefaultFontSize}"
                                                  IsChecked="{x:Bind ViewModel.IsOverwrite, Mode=TwoWay}"
                                                  Text="Overwrite Existing" />
                        </MenuFlyoutSubItem>
                    </MenuFlyout>
                </Button.Flyout>
                <Button.Content>
                    <TextBlock x:Name="ChevronTextBlock"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               AutomationProperties.AccessibilityView="Raw"
                               FontFamily="Segoe MDL2 Assets"
                               FontSize="12"
                               Text="&#xE70D;" />
                </Button.Content>
            </Button>

            <ComboBox Grid.Column="3"
                      Width="92"
                      VerticalAlignment="Stretch"
                      VerticalContentAlignment="Center"
                      FontSize="12"
                      Header="Output Format"
                      IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                      ItemsSource="{x:Bind ViewModel.ImageFormats}"
                      SelectedItem="{x:Bind ViewModel.SelectedFormat, Mode=TwoWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="core:ImageFormat">
                        <TextBlock Text="{x:Bind DisplayName}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Button Grid.Column="4"
                    Height="32"
                    Margin="0 0 0 0"
                    VerticalAlignment="Bottom"
                    Click="{x:Bind ViewModel.OptionsClick}"
                    IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasOptions, ViewModel.IsBusy), Mode=OneWay}">
                <SymbolIcon Margin="-4"
                            RenderTransformOrigin="0.5 0.5"
                            Symbol="Setting">
                    <SymbolIcon.RenderTransform>
                        <CompositeTransform ScaleX="0.6" ScaleY="0.6" />
                    </SymbolIcon.RenderTransform>
                </SymbolIcon>
            </Button>

        </Grid>

        <!--  INPUT ROW  -->
        <Grid Grid.Row="2" ColumnSpacing="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0"
                    Click="{x:Bind ViewModel.AddFilesClick}"
                    Content="Add Files"
                    IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}" />
            <Button Grid.Column="1"
                    Click="{x:Bind ViewModel.RemoveFilesClick}"
                    Content="Remove Selected"
                    IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasSelectedItems, ViewModel.IsBusy), Mode=OneWay}" />
            <Button Grid.Column="2"
                    Click="{x:Bind ViewModel.ClearClick}"
                    Content="Remove All"
                    IsEnabled="{x:Bind TrueAndFalse(ViewModel.HasItems, ViewModel.IsBusy), Mode=OneWay}" />


            <Button Grid.Column="4"
                    Height="32"
                    Margin="0 0 0 0"
                    VerticalAlignment="Bottom"
                    Click="{x:Bind ViewModel.TransformClick}"
                    IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}">
                <SymbolIcon Margin="-4"
                            RenderTransformOrigin="0.5 0.5"
                            Symbol="FullScreen">
                    <SymbolIcon.RenderTransform>
                        <CompositeTransform ScaleX="0.6" ScaleY="0.6" />
                    </SymbolIcon.RenderTransform>
                </SymbolIcon>
            </Button>

            <Button Grid.Column="5"
                    Width="124"
                    HorizontalAlignment="Stretch"
                    Click="{x:Bind ViewModel.ConvertClick}"
                    Content="Convert"
                    IsEnabled="{x:Bind TrueAndTrueAndFalse(ViewModel.HasItems, ViewModel.HasExportFolder, ViewModel.IsBusy), Mode=OneWay}" />


        </Grid>

        <!--  FILES VIEW  -->
        <ListView x:Name="FilesList"
                  Grid.Row="3"
                  Margin="0 10 -20 0"
                  Padding="0 0 20 40"
                  Background="Transparent"
                  IsEnabled="{x:Bind False(ViewModel.IsBusy), Mode=OneWay}"
                  ItemsSource="{x:Bind ViewModel.FileList}"
                  SelectionMode="Multiple">
            <i:Interaction.Behaviors>
                <common:ListViewBaseItemsSelectionBehavior SelectedItems="{x:Bind ViewModel.SelectedFiles}" />
            </i:Interaction.Behaviors>
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.Resources>
            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <EntranceThemeTransition FromHorizontalOffset="0"
                                             FromVerticalOffset="200"
                                             IsStaggeringEnabled="True" />
                    <AddDeleteThemeTransition />
                    <ContentThemeTransition />
                </TransitionCollection>
            </ListView.ItemContainerTransitions>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="common:ImageViewModel">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock FontSize="13"
                                   Text="{x:Bind File.Name}"
                                   ToolTipService.ToolTip="{x:Bind File.Path}" />
                        <TextBlock Grid.Column="2"
                                   Margin="10 0"
                                   FontSize="13"
                                   Opacity="0.65"
                                   Text="{x:Bind Status, Mode=OneWay}"
                                   ToolTipService.ToolTip="{x:Bind ExtendedStatus, Mode=OneWay}" />
                        <TextBlock Grid.Column="3"
                                   FontSize="13"
                                   Opacity="0.65"
                                   Text="{x:Bind Size}" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <ProgressRing x:Name="ProcessingRing"
                      x:Load="{x:Bind ViewModel.IsProcessing, Mode=OneWay}"
                      Grid.Row="3"
                      Width="50"
                      Height="50"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Foreground="White"
                      IsActive="True" />

        <!--  STATUS BAR  -->
        <Grid Grid.Row="4"
              ColumnSpacing="12"
              Height="24"
              Margin="-20 0 -20 0"
              Padding="12 0">
            <Grid.Background>
                <SolidColorBrush Opacity="0.5" Color="{ThemeResource SystemAccentColor}" />
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock VerticalAlignment="Center"
                       Text="{x:Bind ViewModel.StatusBarLeft, Mode=OneWay}"
                       TextLineBounds="Tight" />
            <TextBlock Grid.Column="1"
                       VerticalAlignment="Center"
                       Text="{x:Bind ViewModel.StatusBarRight, Mode=OneWay}"
                       TextAlignment="Right"
                       TextLineBounds="Tight" />
        </Grid>

    </Grid>
</Page>
